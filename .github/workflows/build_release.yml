name: Build And Publish

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag (e.g., v1.0.0)'
        required: true
      release_name:
        description: 'Release Title (e.g., Fika Headless Manager 1.0.0)'
        required: true
      build_type:
        type: choice
        description: 'The build configuration (e.g., Release)'
        required: true
        options: 
        - Release
        - Debug
      release_notes:
        description: 'Release Notes (optional)'
        required: false

jobs:
  build-windows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: 'packages.lock.json'

      - name: Restore dependencies
        run: dotnet restore FikaHeadlessManager.csproj

      - name: Publish Windows build (framework-dependent single file)
        run: |
          dotnet publish FikaHeadlessManager.csproj \
            --configuration ${{ inputs.build_type }} \
            --no-restore \
            --output output/windows/ \
            -p:PublishSingleFile=true \
            -p:SelfContained=false \
            -p:DebugType=None \
            -p:DebugSymbols=false \
            -p:PublishTrimmed=false

      - name: Copy license
        run: cp LICENSE.md output/windows/FikaHeadlessManager-LICENSE.md

      - name: Zip Windows build
        run: |
          cd output/windows
          zip -r "../../${{ inputs.release_name }}.zip" .

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.release_name }}
          path: ${{ inputs.release_name }}.zip

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [linux-x64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: 'packages.lock.json'

      - name: Restore dependencies
        run: dotnet restore FikaHeadlessManager.csproj --runtime ${{ matrix.runtime }}

      - name: Publish Linux build (framework-dependent single file)
        run: |
          dotnet publish FikaHeadlessManager.csproj \
            --configuration ${{ inputs.build_type }} \
            --no-restore \
            --runtime ${{ matrix.runtime }} \
            --output output/${{ matrix.runtime }}/ \
            -p:PublishSingleFile=true \
            -p:SelfContained=false \
            -p:DebugType=None \
            -p:DebugSymbols=false \
            -p:PublishTrimmed=false

      - name: Copy license
        run: cp LICENSE.md output/${{ matrix.runtime }}/FikaHeadlessManager-LICENSE.md

      - name: Tar Linux build
        run: |
          cd output/${{ matrix.runtime }}
          tar -czf "../../${{ inputs.release_name }}-${{ matrix.runtime }}.tar.gz" .

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.release_name }}-${{ matrix.runtime }}
          path: ${{ inputs.release_name }}-${{ matrix.runtime }}.tar.gz

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: releases

      - name: Create GitHub Release Draft
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.release_tag }}
          name: ${{ inputs.release_name }}
          body: ${{ inputs.release_notes }}
          draft: true
          files: |
            releases/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
